{
  "swagger": "2.0",
  "info": {
    "title": "api.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/info": {
      "get": {
        "summary": "*\nGetInfo returns general information concerning the service,\nincluding its identity pubkey.",
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetInfoResponse"
            }
          }
        },
        "tags": [
          "Poet"
        ]
      }
    },
    "/v1/start": {
      "post": {
        "summary": "*\nStart is used to start the service.",
        "operationId": "Start",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiStartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiStartRequest"
            }
          }
        ],
        "tags": [
          "Poet"
        ]
      }
    },
    "/v1/stop": {
      "post": {
        "summary": "*\nStop is used to stop the service.",
        "operationId": "Stop",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiShutdownResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiShutdownRequest"
            }
          }
        ],
        "tags": [
          "Poet"
        ]
      }
    },
    "/v1/submit": {
      "post": {
        "summary": "*\nSubmit adds a challenge to the service's current open round,\nto be included its later generated proof.",
        "operationId": "Submit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiSubmitResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiSubmitRequest"
            }
          }
        ],
        "tags": [
          "Poet"
        ]
      }
    },
    "/v1/updategateway": {
      "post": {
        "summary": "*\nUpdateGateway allows to update the list of gateway addresses (with additional broadcasting config),\nsimilar to the Start rpc, but after the service already started.",
        "operationId": "UpdateGateway",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUpdateGatewayResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateGatewayRequest"
            }
          }
        ],
        "tags": [
          "Poet"
        ]
      }
    }
  },
  "definitions": {
    "apiGetInfoResponse": {
      "type": "object",
      "properties": {
        "openRoundId": {
          "type": "string"
        },
        "executingRoundsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "servicePubKey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "apiShutdownRequest": {
      "type": "object"
    },
    "apiShutdownResponse": {
      "type": "object"
    },
    "apiStartRequest": {
      "type": "object",
      "properties": {
        "gatewayAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableBroadcast": {
          "type": "boolean",
          "format": "boolean"
        },
        "connAcksThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "broadcastAcksThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiStartResponse": {
      "type": "object"
    },
    "apiSubmitRequest": {
      "type": "object",
      "properties": {
        "challenge": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "apiSubmitResponse": {
      "type": "object",
      "properties": {
        "roundId": {
          "type": "string"
        }
      }
    },
    "apiUpdateGatewayRequest": {
      "type": "object",
      "properties": {
        "gatewayAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableBroadcast": {
          "type": "boolean",
          "format": "boolean"
        },
        "connAcksThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "broadcastAcksThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiUpdateGatewayResponse": {
      "type": "object"
    }
  }
}
